{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../SvelteTooltip.svelte",
    "../../App.svelte",
    "../../AnnotationVideoViewer.svelte",
    "../../AnnotationViewer.svelte",
    "../../Annotator.svelte",
    "../../Cursor.svelte",
    "../../DownloadButton.svelte",
    "../../Header.svelte",
    "../../OpticalFlow.svelte",
    "../../PlayButton.svelte",
    "../../VideoAnnotator.svelte",
    "../../VideoProgress.svelte",
    "../../VideoProgressContext.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let tip = \"\";\n  export let top = false;\n  export let right = false;\n  export let bottom = false;\n  export let left = false;\n  export let active = false;\n  export let color = \"#757575\";\n\n  let style = `background-color: ${color};`;\n</script>\n\n<style>\n  .tooltip-wrapper {\n    position: relative;\n    display: inline-block;\n  }\n  .tooltip {\n    position: absolute;\n    font-family: inherit;\n    display: inline-block;\n    white-space: nowrap;\n    color: inherit;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 150ms, visibility 150ms;\n  }\n\n  .default-tip {\n    display: inline-block;\n    padding: 8px 16px;\n    border-radius: 6px;\n    color: inherit;\n  }\n\n  .tooltip.top {\n    left: 50%;\n    transform: translate(-50%, -100%);\n    margin-top: -8px;\n  }\n\n  .tooltip.bottom {\n    left: 50%;\n    bottom: 0;\n    transform: translate(-50%, 100%);\n    margin-bottom: -8px;\n  }\n\n  .tooltip.left {\n    left: 0;\n    transform: translateX(-100%);\n    margin-left: -8px;\n  }\n\n  .tooltip.right {\n    right: 0;\n    transform: translateX(100%);\n    margin-right: -8px;\n  }\n\n  .tooltip.active {\n    opacity: 1;\n    visibility: initial;\n  }\n\n  .tooltip-slot:hover + .tooltip {\n    opacity: 1;\n    visibility: initial;\n  }\n</style>\n\n<div class=\"tooltip-wrapper\">\n  <span class=\"tooltip-slot\">\n    <slot />\n  </span>\n  <div\n    class=\"tooltip\"\n    class:active\n    class:left\n    class:right\n    class:bottom\n    class:top>\n    {#if tip}\n      <div class=\"default-tip\" {style}>{tip}</div>\n    {:else}\n      <slot name=\"custom-tip\" />\n    {/if}\n\n  </div>\n</div>\n",
    "<script>\n\timport VideoSelector from './components/VideoSelector.svelte';\n\timport VideoAnnotator from './components/VideoAnnotator.svelte';\n\timport AnnotationViewer from './components/AnnotationViewer.svelte';\n\timport Header from './components/Header.svelte';\n\timport { video, time } from './stores/video.js';\n\timport { annotations, frames } from './stores/annotations.js';\n\timport { onMount } from 'svelte';\n\timport { time2frame } from './functions/frames.js'\n\n\texport let name;\n\tlet buffered;\n\n\tlet speed = 1;\n\tconst increment = 0.2;\n\tlet currentTime;\n\tlet paused = true;\n\n</script>\n\n\n<main>\n\t<Header />\n\n\t<div class=\"speed\">\n\t\t<VideoAnnotator />\n\t\t<!-- <AnnotationViewer /> -->\n\t</div>\n\n</main>\n\n<style>\n\tmain {\n\t\tmargin: 0 auto;\n\t\tuser-select: none;\n\t}\n\n\t.speed {\n\t\tmargin-top: 30px;\n\t\tpadding: 0 100px;\n\t}\n\n\n</style>",
    "<script>\n    import { frames } from '../stores/annotations.js';\n    import { time2frame } from '../functions/frames.js';\n    import { fade } from 'svelte/transition';\n\n    export let time;\n    export let container;\n\n    function denormalise(position) {\n\n        if (!container) return position;\n\n        let rect = container.getBoundingClientRect();\n        return {\n            x: position.x*rect.width - 5,\n            y: position.y*rect.height - 5,\n        }\n    }\n\n    $: frame = time2frame(time);\n    $: ann = $frames[time2frame(time)];\n</script>\n\n{#if ann && (ann !== 'deleted')}\n    <div out:fade=\"{{ duration: 100 }}\" class=\"point\" style=\"transform: translate({denormalise(ann).x + 'px'}, {denormalise(ann).y + 'px'})\"></div>\n{/if}\n\n<div class=\"debug\">\n{frame}\n{JSON.stringify(ann)}\n</div>\n\n\n<style>\n\n.debug {\n    font-style: italic;\n    font-size: 0.8em;\n}\n\n.point {\n    height: 10px;\n    width: 10px;\n    border-radius: 50%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 1;\n    background-color: #fff;\n    transition: 0.1s ease transform;\n    /* transform: translate(-50%, -50%); */\n}\n</style>",
    "<script>\n    import { frames, annotations } from '../stores/annotations.js';\n    import { afterUpdate } from 'svelte';\n\n    let div;\n\n    afterUpdate(() => {\n        if (div) {\n            div.scrollTo(0, div.scrollHeight);\n        }\n\t});\n</script>\n\n<h3>Log</h3>\n<ul bind:this={div}>\n{#each $annotations as annotation}\n    <li>{ JSON.stringify(annotation) }</li>\n{/each}\n</ul>\n\n<style>\nul {\n    background-color: #fff;\n    border: 1px solid #ccc;\n    height: 200px;\n    overflow: scroll;\n    margin-bottom: 100px; \n}\n\nli {\n    list-style: none;\n}\n\n</style>\n",
    "<script>\n    // TODO: Clean up this component\n    import Cursor from './Cursor.svelte';\n    import { frames, annotations } from '../stores/annotations.js';\n    // import { time } from '../stores/video.js';\n    import { time2frame } from '../functions/frames.js';\n    import { interval } from '../functions/utils.js';\n\n    let position;\n    export let container;\n    export let points;\n    let pressed;\n    let scrubbing = false;\n    let visible;\n    let track = 0;\n    let usingFlow = false;\n    export let time;\n\n\n    function getNormalisedPosition(position) {\n        let rect = container.getBoundingClientRect();\n        let x = position.x - rect.left;\n        let y = position.y - rect.top;\n\n        return { x: x / rect.width, y: y / rect.height };\n    }\n\n    function handleMousemove(e) {\n        position = getNormalisedPosition({\n            x: e.clientX,\n            y: e.clientY\n        });\n\n        if (pressed) {\n            $frames[time2frame(time)] = {\n                ...position, track, time\n            };\n        }\n        if (scrubbing) {\n            $frames[time2frame(time)] = 'deleted';\n        }\n\n        if (pressed || scrubbing) {\n \n            annotations.add({\n                ...position,\n                time,\n                track,\n                left: pressed,\n                right: scrubbing\n            })\n            // console.log($frames)\n        }\n    }\n\n    let ticker;\n\n    function handleMouseup(e) {\n        pressed = false;\n    \n        position = getNormalisedPosition({\n            x: e.clientX,\n            y: e.clientY\n        });\n\n        if (ticker) {\n            ticker.clear();\n        }\n        ticker = null;\n        scrubbing = false;\n\n        if (usingFlow) {\n            // Currently only support one flow point.\n            points = [position];\n        }\n    }\n\n    function handleMousedown(e) {\n        points = [];\n        /**\n         * TODO: State should probably be an enum\n        */\n\n        if (e.buttons == 4) {\n            track += 1;\n            pressed = false;\n            scrubbing = false;\n            usingFlow = true;\n        }\n\n        if (e.buttons == 1) {\n            pressed = true;\n            scrubbing = false;\n            usingFlow = false;\n            track += 1;\n        }\n\n        if (e.buttons == 2) {\n            pressed = false;\n            usingFlow = false;\n            scrubbing = true;\n        }\n\n        if (ticker) {\n            ticker.clear();\n        }\n\n        ticker = interval(function fn() {\n            if (pressed) {\n                $frames[time2frame(time)] = {\n                    ...position, track, time\n                };\n            }\n\n            if (usingFlow) {\n                $frames[time2frame(time)] = {\n                    ...position, track: 'Flow', time\n                };\n            }\n\n\n            if (scrubbing) {\n                $frames[time2frame(time)] = 'deleted';\n            }\n\n\n            annotations.add({\n                ...position,\n                time: time,\n                track: usingFlow ? 'Flow' : track,\n                left: pressed,\n                right: scrubbing\n            })\n        }, 20);\n    }\n\n    function handleRightClick() {\n        return false;\n    }\n\n    function handleKeydown(e) {\n        if (e.key === 'Backspace') {\n            scrubbing = true;\n            pressed = false;\n\n            if (!ticker) {\n                    ticker = interval(() => {\n                    if (scrubbing) {\n                        $frames[time2frame(time)] = 'deleted';\n                    }\n\n                    annotations.add({\n                        ...position,\n                        time: time,\n                        track,\n                        left: pressed,\n                        right: scrubbing\n                    })\n                }, 20);\n            }\n        }\n\n    }\n\n    function handleKeyup(e) {\n        if (e.key === 'Backspace') {\n            scrubbing = false;\n            ticker.clear();\n            ticker = null;\n        }\n    }\n</script>\n\n<svelte:window on:keydown={handleKeydown} on:keyup={handleKeyup} on:mousemove={handleMousemove} on:mouseup={handleMouseup}/>\n\n<div class=\"main\" on:mousedown={handleMousedown} on:contextmenu|preventDefault={handleRightClick} on:mouseleave={() => visible=false} on:mouseenter={visible=true}>\n    <div class=\"video\">\n        <div class=\"inner\" bind:this={container}>\n            {#if visible}\n                <Cursor {position} {pressed} {container} {scrubbing} />\n            {/if}\n            <slot />\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .inner {\n        position: relative;\n        margin: auto;\n        max-width: 960px;\n        margin: auto;\n    }\n    \n    .main {\n        position: relative;\n        margin: 10px 0;\n        box-shadow: 0 1px 3px rgba(50,50,50,0.12), 0 1px 2px;\n        /* background-color: #fff; */\n    }\n\n    .video {\n        position: relative;\n        background-color: #ccc;\n        /* padding: 100px 350px; */\n        padding: 100px 200px;\n        border-top: 10px #aaa solid;\n        border-bottom: 10px #aaa solid;\n        pointer-events: none;\n        \n    }\n</style>",
    "<script>\n    export let position;\n    export let container;\n    export let pressed;\n    export let scrubbing;\n\n    let posDenormed;\n    let rect;\n\n\n    function denormalise(position) {\n\n        if (!container) return position;\n\n        rect = container.getBoundingClientRect();\n        return {\n            x: position.x*rect.width - 10,\n            y: position.y*rect.height - 10,\n        }\n    }\n\n    $: posDenormed = denormalise(position);\n    $: scale = pressed ? 1.2 : 1;\n\n</script>\n\n\n{#if posDenormed}\n    <div class:pressed class:scrubbing style=\"transform: translate({posDenormed.x + 'px'}, {posDenormed.y + 'px'}) scale({scale});\"></div>\n{/if}\n\n<style>\n    div {\n        height: 20px;\n        width: 20px;\n        border-radius: 50%;\n        position: absolute;\n        background-color: rgb(127, 165, 109);\n        transition: scale 0.2 ease-in-out;\n        pointer-events: none;\n        z-index: 100;\n    }\n\n    .pressed {\n        background-color: green;\n    }\n\n    .scrubbing {\n        background-color: red;\n    }\n</style>",
    "<script>\n    import { download } from '../functions/utils.js';\n\n    export let data;\n    export let filename = 'untitled.json';\n\n    function handleClick() {\n        download(filename, JSON.stringify(data));\n    }\n</script>\n\n<button on:click={handleClick}><slot/></button>\n\n<style>\nbutton {\n    margin: 0;\n}\n</style>",
    "<script>\n    import { video } from '../stores/video.js';\n    import DownloadButton from './DownloadButton.svelte';\n    import { annotations, frames } from '../stores/annotations.js';\n    import { beforeUpdate, afterUpdate } from 'svelte';\n    let focus = true;\n\n    function toName(url) {\n        let parts = url.split('/');\n        let name = parts[parts.length-1];\n        return name;\n    }\n\n    function handleInput(e) {\n        let value = e.target.value;\n\n        if (value != $video.src) {\n            video.setSrc(value);\n        }\n    }\n\n    function handleKey(e) {\n        if (e.key == 'Enter') {\n            e.target.blur();\n        }\n        console.log(e.key)\n        if (e.key == 'Escape') {\n            e.target.blur();\n        }\n    }\n\n    function handleFocus(e) {\n        focus = true;\n    }\n\n</script>\n\n\n<header>\n    {#if focus || ($video.src=='')}\n        <div class=\"blocker\"><span>Please enter video url</span></div>\n    {/if}\n    <h1>\n    { toName($video.src) }\n    </h1>\n    <div class=\"buttons\">\n        <div class:focus={focus || ($video.src=='')}>\n            <input autofocus on:keydown={handleKey}\n                on:focus={handleFocus} on:blur={()=> focus=false} placeholder=\"Location of mp4 file\" type=\"text\" value={$video.src} on:input={handleInput}>\n        </div>\n        <DownloadButton data={$annotations} filename='log.json'>Download raw input</DownloadButton>\n        <DownloadButton data={$frames} filename='labels.json'>Download labels</DownloadButton>\n    </div>\n</header>\n\n<style>\nheader {\n    padding: 10px 144px;\n    background-color: #000;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n\nh1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 2em;\n    font-weight: 200;\n    /* text-align: center; */\n    margin: 0;\n}\n\n.buttons {\n    /* position: absolute;\n    right: 0;\n    top: 0; */\n    background-color: #ccc;\n    padding: 5px;\n    display: flex;\n}\n\ninput {\n    height: 100%;\n    width: 350px;\n    opacity: 0.5;\n    transition: 1s position all;\n    cursor: pointer;\n}\n\n.focus input {\n    opacity: 1;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    top: 400px;\n    z-index: 400;\n    height: 50px;\n    text-size: 3em;\n    cursor: auto;\n}\n\n.blocker {\n    position: absolute;\n    height: 100%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    z-index: 300;\n    text-align: center;\n    background: rgba(252, 255, 255, 0.9);\n}\n\n.blocker span {\n    display: block;\n    position: absolute;\n    top: 300px;\n    left: 50%;\n    transform: translateX(-50%);\n    font-size: 3em;\n}\n\n</style>",
    "<script>\n    import { frames } from '../stores/annotations.js';\n    import { time2frame } from '../functions/frames.js';\n\n    let canvasHeight;\n    let canvasWidth;\n    let canvas;\n    export let paused;\n\n    export let loaded;\n    export let videoElement;\n    export let time;\n    export let points;\n\n    let renderedPoint;\n\n    $: console.log('Points: ', points)\n\n    let gui,options,ctx;\n    let curr_img_pyr, prev_img_pyr, point_count, point_status, prev_xy, curr_xy;\n\n    $: {\n        console.log('Changed')\n        console.log(points[0], renderedPoint)\n        if (points[0] != renderedPoint) {\n    \n            curr_img_pyr = new jsfeat.pyramid_t(3);\n            prev_img_pyr = new jsfeat.pyramid_t(3);\n            curr_img_pyr.allocate(960, 540, jsfeat.U8_t|jsfeat.C1_t);\n            prev_img_pyr.allocate(960, 540, jsfeat.U8_t|jsfeat.C1_t);\n\n            point_count = 0;\n            point_status = new Uint8Array(100);\n            prev_xy = new Float32Array(100*2);\n            curr_xy = new Float32Array(100*2);\n\n            if (points[0]) {\n                let coords = {\n                    x: points[0].x * canvasWidth,\n                    y: points[0].y * canvasHeight\n                }\n\n                if(coords.x > 0 & coords.y > 0 & coords.x < canvasWidth & coords.y < canvasHeight) {\n                    curr_xy[point_count<<1] = coords.x;\n                    curr_xy[(point_count<<1)+1] = coords.y;\n                    point_count = 1;\n                } else {\n                    point_count = 0;\n                }\n            }\n        }\n    }\n\n    function run() {\n\n\n    var demo_opt = function(){\n        this.win_size = 20;\n        this.max_iterations = 30;\n        this.epsilon = 0.01;\n        this.min_eigen = 0.001;\n    }\n\n    function demo_app(videoWidth, videoHeight) {\n        canvasWidth  = canvas.width;\n        canvasHeight = canvas.height;\n        ctx = canvas.getContext('2d');\n\n        ctx.fillStyle = \"rgb(0,255,0)\";\n        ctx.strokeStyle = \"rgb(0,255,0)\";\n\n        curr_img_pyr = new jsfeat.pyramid_t(3);\n        prev_img_pyr = new jsfeat.pyramid_t(3);\n        curr_img_pyr.allocate(960, 540, jsfeat.U8_t|jsfeat.C1_t);\n        prev_img_pyr.allocate(960, 540, jsfeat.U8_t|jsfeat.C1_t);\n\n        point_count = 0;\n        point_status = new Uint8Array(100);\n        prev_xy = new Float32Array(100*2);\n        curr_xy = new Float32Array(100*2);\n\n        options = new demo_opt();\n\n    }\n\n    function tick() {\n        requestAnimationFrame(tick);\n        let noFeatures = point_count == 0;\n\n        if (paused || noFeatures) {\n            return;\n        }\n\n        renderedPoint = points[0];\n\n        if (video.readyState === video.HAVE_ENOUGH_DATA) {\n            var vRatio = (canvasHeight / 1080) * 1920;\n            ctx.drawImage(video, 0, 0, vRatio, canvasHeight);\n            var imageData = ctx.getImageData(0, 0, 960, 540);\n\n            // swap flow data\n            var _pt_xy = prev_xy;\n            prev_xy = curr_xy;\n            curr_xy = _pt_xy;\n            var _pyr = prev_img_pyr;\n            prev_img_pyr = curr_img_pyr;\n            curr_img_pyr = _pyr;\n\n            jsfeat.imgproc.grayscale(imageData.data, 960, 540, curr_img_pyr.data[0]);\n\n            curr_img_pyr.build(curr_img_pyr.data[0], true);\n            jsfeat.optical_flow_lk.track(prev_img_pyr, curr_img_pyr, prev_xy, curr_xy, point_count, options.win_size|0, options.max_iterations|0, point_status, options.epsilon, options.min_eigen);\n\n            prune_oflow_points(ctx);\n\n        }\n    }\n\n    // function on_canvas_click(e) {\n    //     var coords = canvas.relMouseCoords(e);\n    //     if(coords.x > 0 & coords.y > 0 & coords.x < canvasWidth & coords.y < canvasHeight) {\n    //         curr_xy[point_count<<1] = coords.x;\n    //         curr_xy[(point_count<<1)+1] = coords.y;\n    //         point_count++;\n    //     }\n    // }\n    // canvas.addEventListener('click', on_canvas_click, false);\n\n    function draw_circle(ctx, x, y) {\n        ctx.beginPath();\n        ctx.arc(x, y, 4, 0, Math.PI*2, true);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    function prune_oflow_points(ctx) {\n        var n = point_count;\n        var i=0,j=0;\n\n        for(; i < n; ++i) {\n            if(point_status[i] == 1) {\n                if(j < i) {\n                    curr_xy[j<<1] = curr_xy[i<<1];\n                    curr_xy[(j<<1)+1] = curr_xy[(i<<1)+1];\n                }\n                draw_circle(ctx, curr_xy[j<<1], curr_xy[(j<<1)+1]);\n                $frames[time2frame(time)] = {\n                    x: curr_xy[j<<1] / canvasWidth,\n                    y: curr_xy[(j<<1)+1] / canvasHeight,\n                    time,\n                    track: \"Flow\"\n                }\n                ++j;\n            }\n        }\n        if (point_count == 0) {\n            points = [];\n        }\n    }\n\n    function relMouseCoords(event) {\n        var totalOffsetX=0,totalOffsetY=0,canvasX=0,canvasY=0;\n        var currentElement = this;\n\n        do {\n            totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n            totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n        } while(currentElement = currentElement.offsetParent)\n\n        canvasX = event.pageX - totalOffsetX;\n        canvasY = event.pageY - totalOffsetY;\n\n        return {x:canvasX, y:canvasY}\n    }\n    HTMLCanvasElement.prototype.relMouseCoords = relMouseCoords;\n\n    // lets do some fun\n    var video = videoElement\n    try {\n        var attempts = 0;\n\n        var findVideoSize = function() {\n            onDimensionsReady(video.videoWidth, video.videoHeight);\n        };\n        var onDimensionsReady = function(width, height) {\n            demo_app(width, height);\n            requestAnimationFrame(tick);\n        };\n\n        findVideoSize();\n\n        setTimeout(function() {\n            video.play();\n        }, 500);\n\n    } catch (error) {\n        console.log('Error', error)\n    }\n\n    }\n\n    $: if (loaded) {\n        ctx = canvas.getContext('2d');\n        run();\n    }\n</script>\n\n<div>\n    <canvas width=\"960\" height=\"540\"\n            bind:clientWidth={canvasWidth}\n            bind:clientHeight={canvasHeight}\n            bind:this={canvas}></canvas>\n    <slot></slot>\n</div>\n\n\n<style>canvas {\n    display: none;\n    width: 960px;\n    height: 540px;\n}</style>",
    "<script>\n    export let paused;\n</script>\n\n<button on:click={() => paused = !paused}>\n{#if paused}\nPlay\n{:else}\nPause\n{/if}\n</button>\n\n<style>\nbutton {\n    height: 100%;\n    width: 60px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.2), 0 1px 2px;\n}\n</style>",
    "<script>\n    import Annotator from './Annotator.svelte';\n    import { video, rate } from '../stores/video.js';\n    import { frames } from '../stores/annotations.js';\n    import VideoProgress from './VideoProgress.svelte';\n    import VideoProgressContext from './VideoProgressContext.svelte';\n    import AnnotationVideoViewer from './AnnotationVideoViewer.svelte';\n    import OpticalFlow from './OpticalFlow.svelte';\n    import { time2frame } from '../functions/frames.js';\n    import { tick, onMount } from 'svelte';\n    import { tweened } from 'svelte/motion';\n\timport { cubicOut } from 'svelte/easing';\n\n    // These values are bound to properties of the video\n    let paused = true;\n    let duration;\n    let videoElement;\n    let time = 0;\n    let seeking = false;\n    let points = [];\n\n\n    async function handleKeydown(e) {\n        if (document.activeElement.nodeName == 'INPUT') {\n            return;\n        }\n\n        if (e.key == ' ') {\n            if (paused) {\n                let oldrate = $rate;\n                $rate = 0.1;\n                videoElement.play();\n                setTimeout(() => $rate=oldrate, 200);\n            } else {\n                videoElement.pause();\n            }\n            e.preventDefault();\n        } \n\n        if (e.key == 'ArrowLeft') {\n            videoElement.currentTime = time - 1;\n        }\n\n        if (e.key == 'ArrowRight') {\n            videoElement.currentTime = time + 1;\n        }\n\n        if (e.key == 'q') {\n            rate.increase();\n        }\n\n        if (e.key == 'a') {\n            rate.decrease();\n        }\n\n    }\n\n    $: video.setDuration(duration);\n\n    $: if (duration) {\n        $frames = Array(time2frame(duration)).fill(null)\n    }\n\n    let error = false;\n    let loaded = false;\n\n    onMount(() => {\n        videoElement.addEventListener('error', () => {\n            error = true;\n            loaded = false;\n        });\n\n        videoElement.addEventListener('seeking', (e) => {\n            // Needed as pausing fires seeking event;\n            seeking = e.target.currentTime !== time;\n        });\n\n        videoElement.addEventListener('seeked', (e) => {\n            seeking = false;\n        });\n\n        videoElement.addEventListener('loadeddata', () => {\n            loaded = true;\n            error = false;\n        });\n    });\n\n\n</script>\n\n<style>\n\tdiv {\n\t\tposition: relative;\n\t}\n\n\tvideo {\n        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px;\n        background: #fff;\n        margin: auto;\n        width: 100%;\n        /* display: block; */\n    }\n\n    .video {\n        width: 100%;\n        /* width: 700px; */\n        /* max-width: 100%; */\n        max-width: 1100px;\n        margin: 0 30px;\n        display: block;\n        margin: auto;\n        /* margin: 30px 200px; */\n    }\n\n    .seeking {\n        opacity: 0.6;\n    }\n\n    .speed {\n        position: absolute;\n        right: 30px;\n        top: 60px;\n        font-size: 4em;\n        color: #aaa;\n        font-style: italic;\n        pointer-events: none;\n    }\n\n    .error {\n        font-size: 2em;\n    }\n\n</style>\n\n<svelte:window on:keydown={handleKeydown}/>\n<OpticalFlow {videoElement} bind:points {loaded} {time} {paused} />\n\n\n<div class=\"video\" class:seeking>\n    <VideoProgress bind:paused {videoElement} bind:time={time} />\n    <Annotator bind:points={points} container={videoElement} bind:time={time}>\n        <video src={$video.src}\n            crossorigin=\"anonymous\"\n            bind:currentTime={time}\n            bind:duration\n            bind:this={videoElement}\n            bind:paused\n            preload\n            bind:playbackRate={$rate}\n        ></video>\n        {#if error}\n        <div class=\"error\">\n            Failed to load video.\n        </div>\n        {/if}\n\n        {#if loaded && !error}\n        <AnnotationVideoViewer container={videoElement} {time}/>\n        {/if}\n\n    </Annotator>\n    <div class=\"speed\">{$rate}x</div>\n    <VideoProgressContext context={10} {videoElement} bind:time={time} />\n</div>\n",
    "<script>\n    import { video } from '../stores/video.js';\n    import { frames } from '../stores/annotations.js';\n   \timport { createEventDispatcher, onMount } from 'svelte';\n    import { tick, afterUpdate } from 'svelte';\n    import { time2frame } from '../functions/frames.js';\n    import SvelteTooltip from 'svelte-tooltip';\n    import { spring } from 'svelte/motion';\n    import { fade } from 'svelte/transition';\n    import PlayButton from './PlayButton.svelte';\n    import debounce from 'lodash.debounce';\n\n    function drawPixel (canvasData, x, y, r, g, b, a) {\n        let index = (x + y * 4000) * 4;\n\n        canvasData.data[index + 0] = r;\n        canvasData.data[index + 1] = g;\n        canvasData.data[index + 2] = b;\n        canvasData.data[index + 3] = a;\n    }\n\n    let coords = spring({ x: 50, y: 50 }, {\n\t\tstiffness: 0.5,\n\t\tdamping: 0.95\n    });\n    \n    function format(seconds) {\n\t\tif (isNaN(seconds)) return '...';\n\n\t\tconst minutes = Math.floor(seconds / 60);\n\t\tseconds = Math.floor(seconds % 60);\n\t\tif (seconds < 10) seconds = '0' + seconds;\n\n\t\treturn `${minutes}:${seconds}`;\n\t}\n\n    let element;\n    let inner;\n    let visible = false;\n    export let videoElement;\n    export let time;\n    export let paused;\n\n    async function handleOnclick(e) {\n\n        if (e.target == element) {\n            let rect = element.getBoundingClientRect();\n            let x = e.clientX - rect.left;\n            let pct = x / rect.width;\n            videoElement.currentTime = (pct*$video.duration).toString();\n        }\n    }\n\n    // let pct = 0;\n    // $: pct = debounce(() => time / $video.duration, 300);\n    let canvas;\n  \n    onMount(() => {\n        const width = 1920;\n        let ctx = canvas.getContext('2d');\n        let canvasData = ctx.getImageData(0, 0, width, 1);\n\n        requestAnimationFrame(function ticker() {\n            if ($video.paused) {\n                requestAnimationFrame(ticker);\n                return;\n            }\n\n            let pct = time / $video.duration\n            inner.style.width = pct*100 + \"%\";\n\n            let framesPerPixel = $frames.length/1920;\n\n\n            ctx.clearRect(0, 0, width, 1);\n            let canvasData = ctx.getImageData(0, 0, width, 1);\n            \n            for (let i=0; i<=1920; ++i) {\n                let frameIndex = Math.round(framesPerPixel*i)\n                let frame = $frames[frameIndex];\n                let hasPosition = (frame != null) && (frame != 'deleted');\n                if (hasPosition) {\n                    drawPixel(canvasData, i, 0, 255, 255, 255, 255);\n                }\n            }\n  \n            ctx.putImageData(canvasData, 0, 0);\n            requestAnimationFrame(ticker);\n        });\n    });\n\n\n</script>\n\n<svelte:body on:click={handleOnclick}/>\n<svelte:window on:mousemove=\"{e => coords.set({ x: e.clientX - element.getBoundingClientRect().x, y: e.clientY })}\" />\n\n<div class=\"container\">\n<div class=\"play\"><PlayButton bind:paused /></div>\n\n\n<div class=\"outer\" bind:this={element} on:mouseleave={() => visible=false} on:mouseenter={() => visible=true}>\n    {#if element && visible}\n    <div in:fade=\"{{duration: 200}}\" out:fade=\"{{duration: 200}}\" class=\"clock\" style=\"left: {$coords.x / element.getBoundingClientRect().width*100}%\">\n        <span>\n        {format($coords.x / element.getBoundingClientRect().width * $video.duration)}\n        </span>\n        </div>\n    {/if}\n    <div bind:this={inner} class=\"inner\"></div>\n    <canvas bind:this={canvas} height={1} width={1920}></canvas>\n</div>\n\n</div>\n\n<style>\n\n    .container {\n        display: flex;\n    }\n\n\n    .hidden {\n        display: none;\n    }\n\n    .clock {\n        position: absolute;\n        z-index: 100;\n        transform: translate(-50%, 0);\n        color: #000;\n        background-color:rgba(0,0,0,0.2);\n        height: 50px;\n        width: 10px;\n        box-sizing: border-box;\n        pointer-events: none;\n    }\n\n    .clock span {\n        margin-left: -15px;\n        margin-top: -20px;\n        display: block;\n        /* position: absolute; */\n    }\n\n\n    .inner {\n        height: 50px;\n        background-color: green;\n        pointer-events: none;\n    }\n\n    .point {\n        height: 50%;\n        width: 2px;\n        background-color: #fff ;\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        z-index: 50;\n        pointer-events: none;\n\n    }\n\n    .outer {\n        background-color: #eee;\n        position: relative;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.2), 0 1px 2px;\n        width: 100%;\n    }\n\n    canvas {\n        width: 100%;\n        height: 20px;\n        position: absolute;\n        z-index: 100;\n        top: 50%;\n        pointer-events: none;\n        transform: translateY(-50%);\n    }\n</style>\n",
    "<script>\n    import { video } from '../stores/video.js';\n    import { frames } from '../stores/annotations.js';\n   \timport { createEventDispatcher, onMount, tick, onDestroy } from 'svelte';\n    import { frame2time, time2frame } from '../functions/frames.js';\n    import { spring } from 'svelte/motion';\n    import { fade } from 'svelte/transition';\n    import PlayButton from './PlayButton.svelte';\n\n    // import { linspace } from '../functions/maths.js';\n\n    let visible = false;\n    let innerElement;\n\n    let coords = spring({ x: 50, y: 50 }, {\n\t\tstiffness: 0.5,\n\t\tdamping: 0.95\n    });\n    \n    function format(seconds, withRem=false) {\n        if (seconds < 0) return '0:00';\n        if (isNaN(seconds)) return '...';\n        \n        let rem = seconds - parseInt(seconds);\n        rem = (Math.round(rem*100)/100).toString();\n        rem = rem.slice(2)\n\n\t\tconst minutes = Math.floor(seconds / 60);\n\t\tseconds = Math.floor(seconds % 60);\n        if (seconds < 10) seconds = '0' + seconds;\n        \n        if (withRem) {\n            return `${minutes}:${seconds}.${rem}`;\n        } else {\n            return `${minutes}:${seconds}`;\n        }\n\t}\n\n    let element;\n    export let videoElement;\n    export let time;\n    export let context = 5;\n    let lasttime = time;\n\n    function calcTime(x) {\n        let rect = element.getBoundingClientRect();\n        let pct = x / rect.width;\n        let delta = pct*context - (context/2);\n        return time + delta;;\n    }\n\n    async function handleOnclick(e) {\n\n        if (e.target == element) {\n            let rect = element.getBoundingClientRect();\n            let x = e.clientX - rect.left;\n            let pct = x / rect.width;\n            let delta = pct*context - (context/2);\n            videoElement.currentTime += delta;\n        }\n    }\n\n    let pct = 0;\n    $: if ($video.duration) {\n        pct = time / $video.duration;\n    }\n\n    function calcLeft(frame, t) {\n        let pointTime = frame2time(frame);\n        let distance = pointTime - t;\n        return ((distance/context)+1/2)*100;\n    }\n\n    let points = [];\n\n    onMount(() => {\n        // Only render when we have time to.\n        requestAnimationFrame(function ticker() {\n            if ($video.paused) {\n                requestAnimationFrame(ticker);\n                return;\n            }\n\n            // Get only the frames that could be visible\n            let visibleFrames = [];\n            let start = time2frame((time-(context/2))-1);\n            let end = time2frame((time+(context/2))+1);\n\n            for (let i=0; i<(end-start); ++i) {\n                visibleFrames[i] = [$frames[start+i], start+i];\n            }\n\n            let pts = visibleFrames.map(([frame, index]) => ({\n            ...frame,\n            index,\n            hasPosition: (frame != null ) && (frame != 'deleted'),\n            position: calcLeft(index, time)\n            })).filter(({hasPosition, position}) => hasPosition && (\n                // Don't render if outside of element\n                position >=0 &&\n                position <=100\n            ));\n            points = pts;\n\n            requestAnimationFrame(ticker);\n        });\n    });\n\n\n    let width;\n\n</script>\n\n<svelte:body on:click={handleOnclick}/>\n<svelte:window on:mousemove=\"{e => coords.set({ x: e.clientX - element.getBoundingClientRect().x, y: e.clientY })}\" />\n\n\n<div class=\"time\">{format(time)}</div>\n\n<div class=\"outer\" bind:this={element} bind:clientWidth={width} on:mouseleave={() => visible=false} on:mouseenter={() => visible=true}>\n    <div bind:this={innerElement} class=\"inner\" style=\"width: 100%\"></div>\n    <div class=\"centre\"></div>\n    {#if innerElement && visible}\n    <div in:fade=\"{{duration: 200}}\" out:fade=\"{{duration: 200}}\" class=\"clock\" style=\"left: {$coords.x / innerElement.getBoundingClientRect().width*100}%\">\n        <span>\n        {format(calcTime($coords.x), true)}\n        </span>\n        </div>\n    {/if}\n    {#each points as point (point.index)}\n\t\t<div class=\"point\" style=\"transform: translate({point.position*width/100}px, -50%)\"></div>\n\t{/each}\n    <div class=\"left\">-5</div> \n    <div class=\"right\">+5</div>\n</div>\n\n\n\n<style>\n    .time {\n        text-align: center;\n    }\n\n\n    .centre {\n        width: 5px;\n        position: absolute;\n        background-color: rgba(255,255,255,0.8);\n        height: 50px;\n        left: 50%;\n        top: 0;\n        transform: translateX(-50%);\n    }\n\n    .inner {\n        height: 50px;\n        pointer-events: none;\n        margin: 3px 0;\n    }\n\n    .point {\n        height: 50%;\n        width: 2px;\n        background-color: #fff ;\n        position: absolute;\n        top: 50%; \n        z-index: 50;\n        transition : transform 0.02 s ease;\n        pointer-events: none;\n    }\n\n    .outer {\n        background-color: #222;\n        position: relative;\n        width: 50%;\n        margin: auto;\n        margin-bottom: 30px;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.2), 0 1px 2px;\n\n    }\n\n    .left {\n        position: absolute;\n        left: 0;\n    }\n\n    .right {\n        position: absolute;\n        right: 0;\n    }\n\n    .clock {\n        position: absolute;\n        top: 0;\n        z-index: 10000;\n        color: #ccc;\n        background-color:rgba(0,0,0,0.4);\n        height: 50px;\n        width: 10px;\n        box-sizing: border-box;\n        pointer-events: none;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}