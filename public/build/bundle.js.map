{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Cursor.svelte","../../node_modules/svelte/store/index.mjs","../../src/stores/annotations.js","../../src/functions/frames.js","../../src/components/Annotator.svelte","../../src/stores/video.js","../../node_modules/svelte/motion/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/VideoProgress.svelte","../../src/components/VideoProgressContext.svelte","../../src/components/AnnotationVideoViewer.svelte","../../src/components/VideoAnnotator.svelte","../../src/components/DownloadButton.svelte","../../src/functions/utils.js","../../src/components/Header.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.23.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n    export let position;\n    export let container;\n    export let pressed;\n    export let scrubbing;\n\n    let posDenormed;\n    let rect;\n\n\n    function denormalise(position) {\n\n        if (!container) return position;\n\n        rect = container.getBoundingClientRect();\n        return {\n            x: position.x*rect.width - 10,\n            y: position.y*rect.height - 10,\n        }\n    }\n\n    $: posDenormed = denormalise(position);\n    $: scale = pressed ? 1.2 : 1;\n\n</script>\n\n\n{#if posDenormed}\n    <div class:pressed class:scrubbing style=\"transform: translate({posDenormed.x + 'px'}, {posDenormed.y + 'px'}) scale({scale});\"></div>\n{/if}\n\n<style>\n    div {\n        height: 20px;\n        width: 20px;\n        border-radius: 50%;\n        position: absolute;\n        background-color: rgb(127, 165, 109);\n        transition: scale 0.2 ease-in-out;\n        pointer-events: none;\n        z-index: 100;\n    }\n\n    .pressed {\n        background-color: green;\n    }\n\n    .scrubbing {\n        background-color: red;\n    }\n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nfunction createAnnotations() {\n\tconst { subscribe, set, update } = writable([]);\n\n\treturn {\n\t\tsubscribe,\n\t\tadd: (ann) => update(anns => [...anns, ann]),\n\t\treset: () => set([])\n\t};\n}\n\nexport const annotations = createAnnotations();\nexport const frames = writable([]);","const resolution = 10;\n\nexport function time2frame(time) {\n    return Math.round(time*resolution);\n}\n\nexport function frame2time(frame) {\n    return frame/resolution;\n}","<script>\n    // TODO: Clean up this component\n    import Cursor from './Cursor.svelte';\n    import { frames, annotations } from '../stores/annotations.js';\n    // import { time } from '../stores/video.js';\n    import { time2frame } from '../functions/frames.js';\n\n    let position;\n    export let container;\n    let pressed;\n    let scrubbing = false;\n    let visible;\n    let track = 0;\n    export let time;\n\n\n    function getNormalisedPosition(position) {\n        let rect = container.getBoundingClientRect();\n        let x = position.x - rect.left;\n        let y = position.y - rect.top;\n\n        return { x: x / rect.width, y: y / rect.height };\n    }\n\n    function handleMousemove(e) {\n        position = getNormalisedPosition({\n            x: e.clientX,\n            y: e.clientY\n        });\n\n        if (pressed) {\n            $frames[time2frame(time)] = {\n                ...position, track, time\n            };\n        }\n        if (scrubbing) {\n            $frames[time2frame(time)] = 'deleted';\n        }\n\n        if (pressed || scrubbing) {\n \n            annotations.add({\n                ...position,\n                time,\n                track,\n                left: pressed,\n                right: scrubbing\n            })\n            // console.log($frames)\n        }\n    }\n\n    let ticker;\n\n    function handleMouseup(e) {\n        pressed = false;\n    \n        position = getNormalisedPosition({\n            x: e.clientX,\n            y: e.clientY\n        });\n        clearInterval(ticker);\n        ticker = null;\n        scrubbing = false;\n    }\n\n    function handleMousedown(e) {\n\n        if (e.buttons == 1) {\n            pressed = true;\n            scrubbing = false;\n            track += 1;\n        }\n\n        if (e.buttons == 2) {\n            pressed = false;\n            scrubbing = true;\n        }\n\n        ticker = setInterval(() => {\n            if (pressed) {\n                $frames[time2frame(time)] = {\n                    ...position, track, time\n                };\n            }\n            if (scrubbing) {\n                $frames[time2frame(time)] = 'deleted';\n            }\n\n            annotations.add({\n                ...position,\n                time: time,\n                track,\n                left: pressed,\n                right: scrubbing\n            })\n        }, 20);\n    }\n\n    function handleRightClick() {\n        return false;\n    }\n\n    function handleKeydown(e) {\n        console.log(e.key)\n        if (e.key === 'Backspace') {\n            scrubbing = true;\n            pressed = false;\n\n            if (!ticker) {\n                    ticker = setInterval(() => {\n                    if (scrubbing) {\n                        $frames[time2frame(time)] = 'deleted';\n                    }\n\n                    annotations.add({\n                        ...position,\n                        time: time,\n                        track,\n                        left: pressed,\n                        right: scrubbing\n                    })\n                }, 20);\n            }\n        }\n\n    }\n\n    function handleKeyup(e) {\n        if (e.key === 'Backspace') {\n            scrubbing = false;\n            clearInterval(ticker);\n            ticker = null;\n        }\n    }\n</script>\n\n<svelte:window on:keydown={handleKeydown} on:keyup={handleKeyup} on:mousemove={handleMousemove} on:mouseup={handleMouseup}/>\n\n<div class=\"main\" on:mousedown={handleMousedown} on:contextmenu|preventDefault={handleRightClick} on:mouseleave={() => visible=false} on:mouseenter={visible=true}>\n    <div class=\"video\">\n        {#if visible}\n            <Cursor {position} {pressed} {container} {scrubbing} />\n        {/if}\n        <div class=\"inner\" bind:this={container}><slot /></div>\n    </div>\n</div>\n\n\n<style>\n    .inner {\n        position: relative;\n    }\n    \n    .main {\n        position: relative;\n        box-shadow: 0 1px 3px rgba(50,50,50,0.12), 0 1px 2px;\n        /* background-color: #fff; */\n        margin: 10px 0;\n    }\n\n    .video {\n        position: relative;\n        background-color: #ccc;\n        padding: 100px 350px;\n        border-top: 10px #aaa solid;\n        border-bottom: 10px #aaa solid;\n        pointer-events: none;\n    }\n</style>","import { writable } from 'svelte/store';\n\nfunction createVideo() {\n\tconst { subscribe, set, update } = writable({\n        rate: 1,\n        src: 'https://github.com/intel-iot-devkit/sample-videos/blob/master/people-detection.mp4?raw=true',\n        duration: 0\n    });\n\n\treturn {\n\t\tsubscribe,\n\t\tplay: () => update((s) => ({ ...s, rate: 1 })),\n\t\tpause: () => update((s) => ({ ...s, rate: 0 })),\n        setDuration: (duration) => update((s) => ({ ...s, duration })),\n        setSrc: (src) => update((s) => ({ ...s, src }))\n        \n\t};\n}\n\nfunction createTime() {\n\tconst { subscribe, set, update } = writable(0);\n\n\treturn {\n\t\tsubscribe,\n\t\tforward: (n) => update((s) => s+n),\n\t\tback: (n) => update((s) => s-n),\n\t\tset\n\t};\n}\n\nfunction createRate() {\n\tconst { subscribe, set, update } = writable(1);\n\n\treturn {\n\t\tsubscribe,\n\t\tincrease: () => update((s) => Math.min(s+0.5, 4)),\n\t\tdecrease: () => update((s) => Math.max(s-0.5, 1)),\n\t\tset\n\t};\n}\n\n\n\nexport const video = createVideo();\nexport const time = createTime();\nexport const rate = createRate();","import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n    import { video } from '../stores/video.js';\n    import { frames } from '../stores/annotations.js';\n   \timport { createEventDispatcher, onMount } from 'svelte';\n    import { tick, afterUpdate } from 'svelte';\n    import { time2frame } from '../functions/frames.js';\n    import SvelteTooltip from 'svelte-tooltip';\n    import { spring } from 'svelte/motion';\n    import { fade } from 'svelte/transition';\n\n    let coords = spring({ x: 50, y: 50 }, {\n\t\tstiffness: 0.5,\n\t\tdamping: 0.95\n    });\n    \n    function format(seconds) {\n\t\tif (isNaN(seconds)) return '...';\n\n\t\tconst minutes = Math.floor(seconds / 60);\n\t\tseconds = Math.floor(seconds % 60);\n\t\tif (seconds < 10) seconds = '0' + seconds;\n\n\t\treturn `${minutes}:${seconds}`;\n\t}\n\n    let element;\n    let visible = false;\n    export let videoElement;\n    export let time;\n\n    async function handleOnclick(e) {\n\n        if (e.target == element) {\n            let rect = element.getBoundingClientRect();\n            let x = e.clientX - rect.left;\n            let pct = x / rect.width;\n            console.log('String: ', (pct*$video.duration).toString())\n            videoElement.currentTime = (pct*$video.duration).toString();\n            console.log(videoElement.currentTime)\n        }\n    }\n\n    let pct = 0;\n    $: if ($video.duration) {\n        pct = time / $video.duration;\n    }\n\n    let points = []\n    $: {\n        points = $frames.map((frame, index) => ({\n            index, hasPosition: (frame != null ) && (frame != 'deleted')\n    })).filter(({hasPosition}) => hasPosition);\n\n    }\n\n    let ctx;\n    onMount(() => {\n        ctx = canvas.getContext('2d');\n    });\n\n\n    let canvas;\n    afterUpdate(() => {\n        if (canvas) {\n            ctx.clearRect(0, 0, 1920, 1);\n            var canvasData = ctx.getImageData(0, 0, 1920, 1);\n            // https://stackoverflow.com/questions/7812514/drawing-a-dot-on-html5-canvas\n            function drawPixel (x, y, r, g, b, a) {\n                var index = (x + y * 1920) * 4;\n\n                canvasData.data[index + 0] = r;\n                canvasData.data[index + 1] = g;\n                canvasData.data[index + 2] = b;\n                canvasData.data[index + 3] = a;\n            }\n\n            points.forEach(point => {\n                let pct = point.index/$frames.length;\n                let px = Math.round(pct*1920);\n                drawPixel(px, 0, 255, 255, 255, 255);\n            });\n            ctx.putImageData(canvasData, 0, 0);\n        }\n    });\n\n</script>\n\n<svelte:body on:click={handleOnclick}/>\n<svelte:window on:mousemove=\"{e => coords.set({ x: e.clientX - element.getBoundingClientRect().x, y: e.clientY })}\" />\n\n{#if element && visible}\n<div in:fade=\"{{duration: 200}}\" out:fade=\"{{duration: 200}}\" class=\"clock\" style=\"left: {$coords.x / element.getBoundingClientRect().width*100}%\">\n    <span>\n    {format($coords.x / element.getBoundingClientRect().width * $video.duration)}\n    </span>\n    </div>\n{/if}\n\n<div class=\"outer\" bind:this={element} on:mouseleave={() => visible=false} on:mouseenter={() => visible=true}>\n    <div class=\"inner\" style=\"width: {pct*100}%\"></div>\n    <canvas bind:this={canvas} height={1} width={1920}></canvas>\n    <!-- {#each points as point (point.index)}\n\t\t<div class=\"point\" style=\"left: {point.index/$frames.length*100}%\"></div>\n\t{/each} -->\n</div>\n\n<style>\n\n    .hidden {\n        display: none;\n    }\n\n    .clock {\n        position: absolute;\n        z-index: 100;\n        transform: translate(-50%, 0);\n        color: #000;\n        background-color:rgba(0,0,0,0.2);\n        height: 50px;\n        width: 10px;\n        box-sizing: border-box;\n        pointer-events: none;\n    }\n\n    .clock span {\n        margin-left: -15px;\n        margin-top: -20px;\n        display: block;\n        /* position: absolute; */\n    }\n\n\n    .inner {\n        height: 50px;\n        background-color: green;\n        pointer-events: none;\n    }\n\n    .point {\n        height: 50%;\n        width: 2px;\n        background-color: #fff ;\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        z-index: 50;\n        pointer-events: none;\n\n    }\n\n    .outer {\n        background-color: #eee;\n        position: relative;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.2), 0 1px 2px;\n\n    }\n\n    canvas {\n        width: 100%;\n        height: 20px;\n        position: absolute;\n        z-index: 100;\n        top: 50%;\n        pointer-events: none;\n        transform: translateY(-50%);\n    }\n</style>","<script>\n    import { video } from '../stores/video.js';\n    import { frames } from '../stores/annotations.js';\n   \timport { createEventDispatcher, onMount, tick, onDestroy } from 'svelte';\n    import { frame2time } from '../functions/frames.js';\n    // import { linspace } from '../functions/maths.js';\n\n    \n    function format(seconds) {\n\t\tif (isNaN(seconds)) return '...';\n\n\t\tconst minutes = Math.floor(seconds / 60);\n\t\tseconds = Math.floor(seconds % 60);\n\t\tif (seconds < 10) seconds = '0' + seconds;\n\n\t\treturn `${minutes}:${seconds}`;\n\t}\n\n    let element;\n    export let videoElement;\n    export let time;\n    export let context = 5;\n    let lasttime = time;\n\n    async function handleOnclick(e) {\n\n        if (e.target == element) {\n            let rect = element.getBoundingClientRect();\n            let x = e.clientX - rect.left;\n            let pct = x / rect.width;\n            let delta = pct*context - (context/2);\n            videoElement.currentTime += delta;\n        }\n    }\n\n    let pct = 0;\n    $: if ($video.duration) {\n        pct = time / $video.duration;\n    }\n\n    function calcLeft(frame, t) {\n        let pointTime = frame2time(frame);\n        let distance = pointTime - t;\n        return ((distance/context)+1/2)*100;\n    }\n\n    let ticker;\n    let points = [];\n\n    onMount(() => {\n        ticker = setInterval(() => {\n\n            if ($video.paused) {\n                return;\n            }\n\n            let pts = $frames.map((frame, index) => ({\n            ...frame,\n            index,\n            hasPosition: (frame != null ) && (frame != 'deleted'),\n            position: calcLeft(index, time)\n            })).filter(({hasPosition, position}) => hasPosition && (\n                // Don't render if outside of element\n                position >=0 &&\n                position <=100\n            ));\n            points = pts;\n        }, 20);\n    });\n\n    onDestroy(() => {\n        clearInterval(ticker);\n    });\n\n    let width;\n\n</script>\n\n<svelte:body on:click={handleOnclick}/>\n\n<div class=\"time\">{format(time)}</div> \n<div class=\"outer\" bind:this={element} bind:clientWidth={width}>\n    <div class=\"inner\" style=\"width: {pct*100}%\"></div>\n    <div class=\"centre\"></div>\n    {#each points as point (point.index)}\n\t\t<div class=\"point\" style=\"transform: translate({point.position*width/100}px, -50%)\"></div>\n\t{/each}\n    <div class=\"left\">-5</div> \n    <div class=\"right\">+5</div>\n</div>\n\n<style>\n    .time {\n        text-align: center;\n    }\n\n    .centre {\n        width: 5px;\n        position: absolute;\n        background-color: rgba(255,255,255,0.8);\n        height: 50px;\n        left: 50%;\n        top: 0;\n        transform: translateX(-50%);\n    }\n\n    .inner {\n        height: 50px;\n        pointer-events: none;\n        margin: 3px 0;\n    }\n\n    .point {\n        height: 50%;\n        width: 2px;\n        background-color: #fff ;\n        position: absolute;\n        top: 50%; \n        z-index: 50;\n        transition : transform 0.02 s ease;\n        pointer-events: none;\n    }\n\n    .outer {\n        background-color: #222;\n        position: relative;\n        width: 50%;\n        margin: auto;\n        margin-bottom: 30px;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.2), 0 1px 2px;\n\n    }\n\n    .left {\n        position: absolute;\n        left: 0;\n    }\n\n    .right {\n        position: absolute;\n        right: 0;\n    }\n</style>","<script>\n    import { frames } from '../stores/annotations.js';\n    import { time2frame } from '../functions/frames.js';\n    import { fade } from 'svelte/transition';\n\n    export let time;\n    export let container;\n\n    function denormalise(position) {\n\n        if (!container) return position;\n\n        let rect = container.getBoundingClientRect();\n        return {\n            x: position.x*rect.width - 5,\n            y: position.y*rect.height - 5,\n        }\n    }\n\n    $: frame = time2frame(time);\n    $: ann = $frames[time2frame(time)];\n</script>\n\n{#if ann && (ann !== 'deleted')}\n    <div out:fade=\"{{ duration: 100 }}\" class=\"point\" style=\"transform: translate({denormalise(ann).x + 'px'}, {denormalise(ann).y + 'px'})\"></div>\n{/if}\n\n{frame}\n{JSON.stringify(ann)}\n\n<style>\n.point {\n    height: 10px;\n    width: 10px;\n    border-radius: 50%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-color: #000;\n    transition: 0.1s ease transform;\n    /* transform: translate(-50%, -50%); */\n}\n</style>","<script>\n    import Annotator from './Annotator.svelte';\n    import { video, rate } from '../stores/video.js';\n    import { frames } from '../stores/annotations.js';\n    import VideoProgress from './VideoProgress.svelte';\n    import VideoProgressContext from './VideoProgressContext.svelte';\n    import AnnotationVideoViewer from './AnnotationVideoViewer.svelte';\n    import { time2frame } from '../functions/frames.js';\n    import { tick, onMount } from 'svelte';\n    import { tweened } from 'svelte/motion';\n\timport { cubicOut } from 'svelte/easing';\n\n    // These values are bound to properties of the video\n    let paused = true;\n    let duration;\n    let videoElement;\n    let time = 0;\n    let seeking = false;\n\n\n    async function handleKeydown(e) {\n        console.log(document.activeElement)\n        if (document.activeElement.nodeName == 'INPUT') {\n            return;\n        }\n\n        if (e.key == ' ') {\n            if (paused) {\n                let oldrate = $rate;\n                $rate = 0.1;\n                videoElement.play();\n                setTimeout(() => $rate=oldrate, 200);\n            } else {\n                videoElement.pause();\n            }\n            e.preventDefault();\n        } \n\n        if (e.key == 'ArrowLeft') {\n            videoElement.currentTime = time - 1;\n        }\n\n        if (e.key == 'ArrowRight') {\n            videoElement.currentTime = time + 1;\n        }\n\n\n        if (e.key == 'q') {\n            console.log('Increase rate')\n            rate.increase();\n        }\n\n        if (e.key == 'a') {\n            rate.decrease();\n        }\n\n    }\n\n    $: video.setDuration(duration);\n\n    $: if (duration) {\n        $frames = Array(time2frame(duration)).fill(null)\n    }\n\n    let error = false;\n    let loaded = false;\n\n    onMount(() => {\n        videoElement.addEventListener('error', () => {\n            error = true;\n            loaded = false;\n        });\n\n        videoElement.addEventListener('seeking', (e) => {\n            // Needed as pausing fires seeking event;\n            seeking = e.target.currentTime !== time;\n        });\n\n        videoElement.addEventListener('seeked', (e) => {\n            seeking = false;\n        });\n\n        videoElement.addEventListener('loadeddata', () => {\n            loaded = true;\n            error = false;\n        });\n    });\n\n\n</script>\n\n<style>\n\tdiv {\n\t\tposition: relative;\n\t}\n\n\tvideo {\n        width: 100%;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px;\n        background: #fff;\n    }\n\n    .video {\n        width: 80%;\n        margin: 30px auto;\n    }\n\n    .seeking {\n        opacity: 0.6;\n    }\n\n    .speed {\n        position: absolute;\n        right: 30px;\n        top: 60px;\n        font-size: 4em;\n        color: #aaa;\n        font-style: italic;\n    }\n\n    .error {\n        font-size: 2em;\n    }\n</style>\n\n<svelte:window on:keydown={handleKeydown}/>\n\n\n<div class=\"video\" class:seeking>\n    <VideoProgress {videoElement} bind:time={time} />\n    <Annotator container={videoElement} bind:time={time}>\n        <video src={$video.src}\n            bind:currentTime={time}\n            bind:duration\n            bind:this={videoElement}\n            bind:paused\n            preload\n            bind:playbackRate={$rate}\n        ></video>\n        {#if error}\n        <div class=\"error\">\n            Failed to load video.\n        </div>\n        {/if}\n\n        {#if loaded && !error}\n        <AnnotationVideoViewer container={videoElement} {time}/>\n        {/if}\n\n    </Annotator>\n    <div class=\"speed\">{$rate}x</div>\n    <VideoProgressContext context={10} {videoElement} bind:time={time} />\n\t<!-- <div class=\"controls\" style=\"opacity: {duration && showControls ? 1 : 0}\">\n\t\t<progress value=\"{(time / duration) || 0}\"/>\n\n\t\t<div class=\"info\">\n\t\t\t<span class=\"time\">{format(time)}</span>\n\t\t\t<span>click anywhere to {paused ? 'play' : 'pause'} / drag to seek</span>\n\t\t\t<span class=\"time\">{format(duration)}</span>\n\t\t</div>\n\t</div> -->\n</div>","<script>\n    import { download } from '../functions/utils.js';\n\n    export let data;\n    export let filename = 'untitled.json';\n\n    function handleClick() {\n        download(filename, JSON.stringify(data));\n    }\n</script>\n\n<button on:click={handleClick}><slot/></button>\n\n<style>\nbutton {\n    margin: 0;\n}\n</style>","// https://stackoverflow.com/questions/3665115/how-to-create-a-file-in-memory-for-user-to-download-but-not-through-server\nexport function download(filename, text) {\n    let element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n}","<script>\n    import { video } from '../stores/video.js';\n    import DownloadButton from './DownloadButton.svelte';\n    import { annotations, frames } from '../stores/annotations.js';\n    import { beforeUpdate, afterUpdate } from 'svelte';\n    let focus = true;\n\n    function toName(url) {\n        let parts = url.split('/');\n        let name = parts[parts.length-1];\n        return name;\n    }\n\n    function handleInput(e) {\n        let value = e.target.value;\n\n        if (value != $video.src) {\n            video.setSrc(value);\n        }\n    }\n\n    function handleKey(e) {\n        if (e.key == 'Enter') {\n            e.target.blur();\n        }\n        console.log(e.key)\n        if (e.key == 'Escape') {\n            e.target.blur();\n        }\n    }\n\n    function handleFocus(e) {\n        focus = true;\n    }\n\n</script>\n\n\n<header>\n    {#if focus || ($video.src=='')}\n        <div class=\"blocker\"><span>Please enter video url</span></div>\n    {/if}\n    <h1>\n    { toName($video.src) }\n    </h1>\n    <div class=\"buttons\">\n        <div class:focus={focus || ($video.src=='')}>\n            <input autofocus on:keydown={handleKey}\n                on:focus={handleFocus} on:blur={()=> focus=false} placeholder=\"Location of mp4 file\" type=\"text\" value={$video.src} on:input={handleInput}>\n        </div>\n        <DownloadButton data={$annotations} filename='log.json'>Download raw input</DownloadButton>\n        <DownloadButton data={$frames} filename='labels.json'>Download labels</DownloadButton>\n    </div>\n</header>\n\n<style>\nheader {\n    padding: 10px 144px;\n    background-color: #000;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n\nh1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 2em;\n    font-weight: 200;\n    /* text-align: center; */\n    margin: 0;\n}\n\n.buttons {\n    /* position: absolute;\n    right: 0;\n    top: 0; */\n    background-color: #ccc;\n    padding: 5px;\n    display: flex;\n}\n\ninput {\n    height: 100%;\n    width: 350px;\n    opacity: 0.5;\n    transition: 1s position all;\n    cursor: pointer;\n}\n\n.focus input {\n    opacity: 1;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    top: 400px;\n    z-index: 400;\n    height: 50px;\n    text-size: 3em;\n    cursor: auto;\n}\n\n.blocker {\n    position: absolute;\n    height: 100%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    z-index: 300;\n    text-align: center;\n    background: rgba(252, 255, 255, 0.9);\n}\n\n.blocker span {\n    display: block;\n    position: absolute;\n    top: 300px;\n    left: 50%;\n    transform: translateX(-50%);\n    font-size: 3em;\n}\n\n</style>","<script>\n\timport VideoSelector from './components/VideoSelector.svelte';\n\timport VideoAnnotator from './components/VideoAnnotator.svelte';\n\timport AnnotationViewer from './components/AnnotationViewer.svelte';\n\timport Header from './components/Header.svelte';\n\timport { video, time } from './stores/video.js';\n\timport { annotations, frames } from './stores/annotations.js';\n\timport { onMount } from 'svelte';\n\timport { time2frame } from './functions/frames.js'\n\n\texport let name;\n\tlet buffered;\n\n\tlet speed = 1;\n\tconst increment = 0.2;\n\tlet currentTime;\n\tlet paused = true;\n\n</script>\n\n\n<main>\n\t<Header />\n\n\t<div class=\"speed\">\n\t\t<VideoAnnotator />\n\t\t<!-- <AnnotationViewer /> -->\n\t</div>\n\n</main>\n\n<style>\n\tmain {\n\t\tmargin: 0 auto;\n\t}\n\n\tvideo {\n\t\twidth: 100%;\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t}\n\n\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'Video Annotator'\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","set_store_value","ret","value","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","style","setProperty","crossorigin","is_crossorigin","parent","error","toggle_class","toggle","classList","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_out_transition","params","animation_name","config","running","group","go","easing","tick","css","start_time","end_time","reset","destroy_block","lookup","bind","index","props","bound","create_component","mount_component","m","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","this","$destroy","splice","y","posDenormed","rect","position","container","pressed","scrubbing","getBoundingClientRect","width","height","denormalise","scale","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","annotations","ann","anns","createAnnotations","frames","time2frame","time","round","handleRightClick","preventDefault","call","visible","ticker","track","getNormalisedPosition","left","top","clientX","clientY","$frames","right","clearInterval","buttons","setInterval","console","log","video","rate","play","pause","setDuration","setSrc","createVideo","increase","min","decrease","createRate","is_date","obj","prototype","toString","spring","opts","stiffness","damping","precision","last_time","current_token","last_value","target_value","inv_mass","inv_mass_recovery_rate","cancel_task","token","hard","soft","settled","dt","next_value","tick_spring","current_value","delta","velocity","abs","getTime","isArray","_","fulfil","fade","linear","getComputedStyle","opacity","format","cleanup","abort","started","seconds","isNaN","minutes","floor","coords","videoElement","canvas","pct","points","getContext","clearRect","canvasData","getImageData","point","px","g","putImageData","$video","frame","hasPosition","currentTime","computed_style","z_index","parseInt","zIndex","iframe","tabIndex","source","contentWindow","onload","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","will_move","did_move","first","new_block","old_block","new_key","old_key","lasttime","calcLeft","frame2time","paused","pts","JSON","stringify","seeking","loaded","activeElement","nodeName","oldrate","$rate","setTimeout","filename","encodeURIComponent","display","body","click","download","toName","handleKey","url","parts","blur","focus"],"mappings":"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"}